{"version":3,"sources":["components/card/card.js","actions/index.js","App.js","reportWebVitals.js","reducers/index.js","store/index.js","index.js","constants/index.js"],"names":["Card","props","dispatch","useDispatch","saveFavourite","useCallback","type","payload","data","restaurant","removeFavourite","className","favourite","name","status","sort","sortingValues","bestMatch","newest","ratingAverage","distance","popularity","averageProductPrice","deliveryCosts","minCost","onClick","App","useSelector","state","useState","filter","setFilter","setSort","onChange","ev","target","value","toLowerCase","placeholder","favourites","length","_","chain","orderBy","iteratee","map","res","index","includes","restaurants","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","JSON","parse","localStorage","getItem","findIndex","push","setItem","stringify","favlist","splice","store","createStore","composeWithDevTools","applyMiddleware","thunk","a","axios","get","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3edf968c.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\r\nimport './card.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { saveFavouriteRestaurants, removeFavouriteRestaurants } from '../../actions'\r\n\r\nfunction Card (props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const saveFavourite = useCallback(()=>{\r\n        // Do some things with props or state\r\n        dispatch(saveFavouriteRestaurants(props.restaurant))\r\n    },[props.restaurant, dispatch])\r\n\r\n    const removeFavourite = useCallback(()=>{\r\n        // Do some things with props or state\r\n        dispatch(removeFavouriteRestaurants(props.restaurant))\r\n    },[props.restaurant, dispatch])\r\n\r\n    return (\r\n        <div className={(!props.favourite) ? \"p-4 border-2 border-gray-200 rounded-md shadow-sm\" : \"p-4 border-2 border-gray-200 rounded-md shadow-sm\"}>\r\n            <div className=\"flex justify-between my-2 \">\r\n                <div className=\"font-bold\">\r\n                    {props.restaurant.name}\r\n                </div>\r\n                <div className=\"\">\r\n                    <span className=\"text-sm font-bold text-yellow-800\">{props.restaurant.status}</span><br/>\r\n                </div>\r\n            </div>\r\n            <div className=\"relative\">\r\n                <div>\r\n                    <span className={(props.sort === 'bestMatch')  ? \"font-bold\" : ''}>Best Match - <span className=\"\">{props.restaurant.sortingValues.bestMatch}</span></span><br/>\r\n                    <span className={(props.sort === 'newest')  ? \"font-bold\" : ''}>Newest - <span className=\"\">{props.restaurant.sortingValues.newest}</span></span><br/>\r\n                    <span className={(props.sort === 'ratingAverage')  ? \"font-bold\" : ''}>Rating Average - <span className=\"\">{props.restaurant.sortingValues.ratingAverage}</span></span><br/>\r\n                    <span className={(props.sort === 'distance')  ? \"font-bold\" : ''}>Distance - <span className=\"\">{props.restaurant.sortingValues.distance}</span></span><br/>\r\n                    <span className={(props.sort === 'popularity')  ? \"font-bold\" : ''}>Popularity - <span className=\"\">{props.restaurant.sortingValues.popularity}</span></span><br/>\r\n                    <span className={(props.sort === 'averageProductPrice')  ? \"font-bold\" : ''}>Average Product Price - <span className=\"\">{props.restaurant.sortingValues.averageProductPrice}</span></span><br/>\r\n                    <span className={(props.sort === 'deliveryCosts')  ? \"font-bold\" : ''}>Delivery Costs - <span className=\"\">{props.restaurant.sortingValues.deliveryCosts}</span></span><br/>\r\n                    <span className={(props.sort === 'minCost')  ? \"font-bold\" : ''}>Min Cost - <span className=\"\">{props.restaurant.sortingValues.minCost}</span></span><br/>\r\n                </div>\r\n                <div className=\"absolute bottom-0 right-0\">\r\n                    { (props.favourite)\r\n                        ? \r\n                            <button className=\"px-4 text-gray-200 bg-red-600 rounded-md outline-none focus:outline-none hover:bg-red-400\" onClick={removeFavourite}>-</button> \r\n                        : \r\n                        <>\r\n                            <button className=\"px-4 text-gray-200 bg-gray-600 rounded-md outline-none focus:outline-none hover:bg-gray-800\" onClick={saveFavourite}>+</button>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import axios from 'axios';\r\nimport { BaseUrl } from '../constants'\r\n\r\n//synchronous action creator\r\nconst fetchRestaurantSuccess = (data) => ({\r\n    type: 'FETCH_RESTAURANTS',\r\n    payload: { data }\r\n})\r\n\r\nexport const saveFavouriteRestaurants = ( data ) => ({\r\n    type: 'SAVE_FAVOURITE_RESTAURANTS',\r\n    payload: { data }\r\n})\r\n\r\nexport const fetchFavouriteRestaurants = (data) => ({\r\n    type: 'FETCH_FAVOURITE_RESTAURANTS',\r\n    payload: { }\r\n})\r\n\r\nexport const removeFavouriteRestaurants = (data) => ({\r\n    type: 'REMOVE_FAVOURITE_RESTAURANTS',\r\n    payload: { data }\r\n})\r\n\r\n/*asynchronous thunk action creator\r\n  calls the api, then dispatches the synchronous action creator\r\n*/\r\nexport const fetchRestaurants =  () => {\r\n    return async dispatch => {\r\n        try {\r\n            let res = await axios.get(BaseUrl)\r\n            dispatch(fetchRestaurantSuccess(res.data.data.restaurants))\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\nimport Card from \"./components/card/card\";\nimport {useSelector} from \"react-redux\";\nimport _ from 'lodash';\n\nfunction App() {\n  const data = useSelector((state) => state);\n  const [filter, setFilter] = useState(\"\");\n  const [sort, setSort] = useState(\"\");\n  \n  return (\n      <div className=\"App\">\n        <header className=\"p-2 pt-6 text-center text-gray-200 bg-gray-800 min-h-20\">\n          {/* <h4 className=\"text-2xl font-bold\">TakeAway Test</h4> */}\n          <div className=\"justify-center my-4 md:flex md:px-64\">\n            <div className=\"w-full my-2 md:w-6/12\">\n              <input type=\"text\" onChange={(ev) => setFilter(ev.target.value.toLowerCase())} className=\"w-full p-2 text-gray-800 bg-gray-300 rounded-md outline-none md:mr-16 bordr-0 focus:outline-none\" placeholder=\"Type to filter\"/>\n            </div>\n            <div className=\"w-full my-2 md:w-6/12\">\n              <select onChange={(ev) => setSort(ev.target.value)} className=\"w-full p-2 text-gray-800 bg-gray-300 rounded-md outline-none md:ml-16 bordr-0 focus:outline-none\">\n                <option value=\"\">Sort values</option>\n                <option value=\"bestMatch\">Best Match (highest to lowest)</option>\n                <option value=\"newest\">Newest (highest to lowest)</option>\n                <option value=\"ratingAverage\">Rating Average (highest to lowest)</option>\n                <option value=\"distance\">Distance (highest to lowest)</option>\n                <option value=\"popularity\">Popularity (highest to lowest)</option>\n                <option value=\"averageProductPrice\">Average Product Price (highest to lowest)</option>\n                <option value=\"deliveryCosts\">Delivery Cost (highest to lowest)</option>\n                <option value=\"minCost\">Minimum Cost (highest to lowest)</option>\n              </select>\n            </div>\n          </div>\n        </header>\n        \n        {\n                \n          (data.favourites.length > 0) ?   \n          <div className=\"py-4 bg-gray-100\">\n            <div className=\"w-full px-2 py-4 md:px-8\">\n              <h4>Favourites</h4>\n            </div>     \n            <section className=\"grid gap-4 p-4 grid-col-1 md:grid-cols-4\">\n            {\n              _.chain(data.favourites)\n              .orderBy([`${(sort) ? 'sortingValues.'+sort : 'sortingValues'}`],['desc'])\n              .filter(_.iteratee({'status': 'open'}))\n              .map( (res, index) => {\n                return (res.name.toLowerCase().includes(filter)) ? <Card key={index} restaurant={res} favourite={true} sort={sort} filter={filter}/> : ''\n              })\n              .value()\n            }\n            </section>\n            <section className=\"grid gap-4 p-4 grid-col-1 md:grid-cols-4\">\n         \n            {\n              _.chain(data.favourites)\n              .orderBy([`${(sort) ? 'sortingValues.'+sort : 'sortingValues'}`],['desc'])\n              .filter(_.iteratee({'status': 'order ahead'}))\n              .map( (res, index) => {\n                return (res.name.toLowerCase().includes(filter)) ? <Card key={index} restaurant={res} favourite={true} sort={sort} filter={filter}/> : ''\n              })\n              .value()\n            }\n            </section>\n            <section className=\"grid gap-4 p-4 grid-col-1 md:grid-cols-4\">\n         \n            {\n              _.chain(data.favourites)\n              .orderBy([`${(sort) ? 'sortingValues.'+sort : 'sortingValues'}`],['desc'])\n              .filter(_.iteratee({'status': 'closed'}))\n              .map( (res, index) => {  \n                return (res.name.toLowerCase().includes(filter)) ? <Card key={index} restaurant={res} favourite={true} sort={sort} filter={filter}/> : ''              \n              })\n              .value()\n            }\n          </section>\n          </div> : ''\n        }\n        {\n          <div className=\"py-4\">\n            <section className=\"grid gap-4 p-4 grid-col-1 md:grid-cols-4\">\n              {\n                _.chain(data.restaurants)\n                .orderBy([`${(sort) ? 'sortingValues.'+sort : 'sortingValues'}`],['desc'])\n                .filter(_.iteratee({'status': 'open'}))\n                .map( (res, index) => {\n                  return (res.name.toLowerCase().includes(filter)) ? <Card key={index} restaurant={res} favourite={false} sort={sort} filter={filter}/> : ''\n                })\n                .value()\n              } \n            </section>\n            <section className=\"grid gap-4 p-4 grid-col-1 md:grid-cols-4\">\n              {\n                _.chain(data.restaurants)\n                .orderBy([`${(sort) ? 'sortingValues.'+sort : 'sortingValues'}`],['desc'])\n                .filter(_.iteratee({'status': 'order ahead'}))\n                .map( (res, index) => {\n                  return (res.name.toLowerCase().includes(filter)) ? <Card key={index} restaurant={res} favourite={false} sort={sort} filter={filter}/> : ''\n                })\n                .value()\n              }\n            </section>\n            <section className=\"grid gap-4 p-4 grid-col-1 md:grid-cols-4\"> \n          {\n            _.chain(data.restaurants)\n            .orderBy([`${(sort) ? 'sortingValues.'+sort : 'sortingValues'}`],['desc'])\n            .filter(_.iteratee({'status': 'closed'}))\n            .map( (res, index) => {\n              return (res.name.toLowerCase().includes(filter)) ? <Card key={index} restaurant={res} favourite={false} sort={sort} filter={filter}/> : ''\n            })\n            .value()\n          }          \n        </section>\n          </div>\n        }\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import _ from 'lodash';\r\n\r\nconst initialState = {\r\n    restaurants: [],\r\n    favourites: []\r\n}\r\nconst restaurants = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case 'FETCH_RESTAURANTS':\r\n            return {...state, restaurants: action.payload.data }\r\n\r\n        case 'FETCH_FAVOURITE_RESTAURANTS':\r\n            return {...state, favourites: JSON.parse(localStorage.getItem('FAVOURITE')) || [] }\r\n\r\n        case 'SAVE_FAVOURITE_RESTAURANTS':\r\n            let favourite = JSON.parse(localStorage.getItem('FAVOURITE')) || [];\r\n            if (_.findIndex(favourite, action.payload.data) === -1) {\r\n                favourite.push(action.payload.data);\r\n                localStorage.setItem('FAVOURITE', JSON.stringify(favourite)); \r\n                return {...state, favourites: favourite };\r\n            }\r\n            return state\r\n\r\n        case 'REMOVE_FAVOURITE_RESTAURANTS':\r\n            let favlist = JSON.parse(localStorage.getItem('FAVOURITE')) || [];\r\n            favlist.splice(_.findIndex(favlist, action.payload.data), 1);\r\n            localStorage.setItem('FAVOURITE', JSON.stringify(favlist));\r\n            return {...state, favourites: favlist };  \r\n            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default restaurants\r\n","\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport restaurants from '../reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nconst store = createStore(restaurants, composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./store\";\nimport { fetchRestaurants, fetchFavouriteRestaurants } from \"./actions\";\nimport { Provider } from 'react-redux';\n\nstore.dispatch(fetchRestaurants());\nstore.dispatch(fetchFavouriteRestaurants());\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const BaseUrl = 'https://tkassignment.herokuapp.com';"],"sourceRoot":""}